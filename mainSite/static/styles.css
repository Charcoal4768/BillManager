* {
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Inter', 'sans-serif', Calibri;
}

:root {
    --small-font-size: clamp(0.5rem, 2vw, 0.75rem);
    --normal-font-size: clamp(0.75rem, 3vw, 1rem);
    --medium-font-size: clamp(1rem, 4vw, 1.25rem);
    --large-font-size: clamp(1.25rem, 5vw, 2rem);
    --standard-container-padding: clamp(1.5rem, 5vw, 2rem);
    --standard-padding: clamp(0.5rem, 2.5vw, 0.75rem);
    --thin-container-padding: clamp(0.25rem, 1.5vw, 0.5rem);
    --grey: #a6a6a6;
    --light-grey: #d9d9d9;
    --primary-color: #6200EE;
    --on-surface: rgba(0, 0, 0, 0.6);
    --outline-color: #ccc;
    --bg-color: #fff;
    --transition-speed: 0.3s;
}

.hidden {
    display: none;
    visibility: hidden;
}

li {
    list-style: inherit;
}

p {
    padding-top: var(--standard-padding);
}

h4{
    font-weight: 400;
    font-size: var(--medium-font-size);
}

nav {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    padding: var(--standard-padding);
    background: white;
}

nav ul {
    display: flex;
    list-style: none;
}

nav ul li {
    margin-left: var(--thin-container-padding);
    margin-right: var(--thin-container-padding);
}

nav .internal {
    position: relative;
    width: auto;
    height: 100%;
    display: flex;
    align-items: center;
}

nav .internal a {
    text-decoration: none;
    color: black;
}

nav .internal .profile {
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
}

nav .internal .profile img {
    width: 50px;
    height: 50px;
    border-radius: 100%;
    margin-right: var(--standard-padding);
}

nav .internal .links {
    position: relative;
    display: block;
    margin: auto;
    padding-bottom: var(--standard-padding);
    padding-top: var(--standard-padding);
    /* border-bottom: 1px solid var(--grey); */
}

nav .internal .links::before {
    position: absolute;
    content: '';
    height: 1px;
    background-color: var(--grey);
    width: 120%;
    left: -10%;
    bottom: -10%;
}

.burger {
    position: absolute;
    top: 10px;
    right: 0;
    visibility: hidden;
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 20px;
    cursor: pointer;
    min-width: 30px;
}

.burger .line {
    height: 3px;
    background-color: var(--grey);
    border-radius: 2px;
    transition: all 0.3s ease;
}

.flashContainer {
    position: fixed;
    top: 10%;
    right: 10%;
    left: 10%;
    padding: var(--standard-container-padding);
    margin: auto;
    z-index: 9;
}

.flashContainer .messageList {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.flashContainer .messageList li {
    padding: var(--standard-padding);
    font-size: var(--normal-font-size);
    padding-right: var(--standard-container-padding);
}

.messageContainer {
    position: relative;
    display: flex;
    flex-wrap: nowrap;
    align-self: center;
    max-width: 800px;
    z-index: 9;
    background-color: #CCFFCC;
    padding-right: 1em;
    border-radius: 4px;
}

.messageContainer.warning {
    background-color: #fffd90;
}

.messageContainer.danger {
    background-color: #FFBFBF;
}

.messageContainer .close-btn {
    display: flex;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 4px;
    align-items: center;
    font-size: var(--medium-font-size);
}

#productContainer{
    padding: var(--standard-container-padding);
}

#productList{
    padding-top: var(--thin-container-padding);
    padding-bottom: var(--thin-container-padding);
}

#productList td,th{
    padding: 10px;
    text-align: left;
}

#productList table th{
    font-size: var(--medium-font-size);
    font-weight: 400;
}

#productList table td{
    font-size: var(--normal-font-size);
}

#productList tr:nth-child(odd) {
  background-color: #eaeaea; /* Light gray */
}

/* Style for even-numbered rows */
#productList tr:nth-child(even) {
  background-color: #fafafa; /* White */
}

.store-link {
    text-decoration: none;
    color: inherit;
}

input,
select {
    -webkit-background-clip: text !important;
    background-clip: text !important;
}

.container {
    text-align: center;
}

.material-input {
    position: relative;
    min-width: clamp(150px, 40vw, 180px);
    height: 56px;
}

.input-container {
    position: relative;
    width: auto;
    height: 100%;
    border: 1px solid var(--outline-color);
    border-radius: 8px;
    overflow: hidden;
    transition: border-color var(--transition-speed);
}

.input-container input,
.input-container select {
    position: absolute;
    top: 0;
    left: 0;
    width: auto;
    height: 100%;
    padding: 0 1rem;
    font-family: 'Inter', sans-serif;
    font-size: var(--normal-font-size);
    background: transparent;
    color: black;
    border: none;
    outline: none;
    z-index: 10;
}

.input-container select {
    appearance: none;
    -webkit-appearance: none;
    padding-right: 2.5rem;
    /* Add padding to prevent text overlapping the caret */
}

.select-caret {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    pointer-events: none;
    z-index: 11;
    /* Place above the select element */
    transition: transform var(--transition-speed);
}

.material-input:focus-within .select-caret {
    transform: translateY(-50%) rotate(180deg);
}

.label {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--on-surface);
    transition: top var(--transition-speed),
        transform var(--transition-speed),
        font-size var(--transition-speed),
        color var(--transition-speed);
    pointer-events: none;
    z-index: 5;
    white-space: nowrap;
}

/* The floating label for focused/filled state */
.material-input:focus-within .label,
.material-input.filled .label {
    top: 0;
    transform: translateY(-50%);
    font-size: var(--small-font-size);
    background-color: var(--bg-color);
    padding: 0 0.25rem;
    color: var(--primary-color);
    left: var(--small-font-size);
}

.input-container:has([required])+.label::after {
    position: relative;
    content: "*";
    color: #ff8282;
    margin-left: 4px;
}

.styled-input-line {
    position: absolute;
    bottom: 0;
    left: 0;
    width: auto;
    height: 2px;
    background-color: transparent;
    transition: background-color var(--transition-speed);
}

.material-input:focus-within .input-container {
    border-color: var(--primary-color);
    border-width: 2px;
}

.material-input.short {
    width: 50%;
}

.material-input.long {
    width: auto;
}

/* Minimalistic hover effect for the input container */
.material-input:hover .input-container {
    box-shadow: 0 0 5px var(--light-grey);
}

.authLander {
    width: auto;
    height: 100vh;
    display: flex;
    align-items: center;
}

.authFormContainer {
    max-width: 1000px;
    max-height: 1200px;
    padding: var(--standard-container-padding);
    display: block;
    margin: auto;
}

.authFormContainer form {
    display: flex;
    flex-direction: column;
    row-gap: var(--thin-container-padding);
}

.authFormContainer button {
    /* Base styles */
    display: inline-block;
    width: auto;
    padding: var(--standard-padding);
    margin-top: var(--standard-padding);
    font-size: var(--normal-font-size);
    font-weight: 500;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    border-radius: 8px;
    border: 1px solid var(--primary-color);
    background-color: var(--primary-color);
    color: var(--bg-color);
    /* Use a variable for text color */
    transition: background-color var(--transition-speed), color var(--transition-speed), border-color var(--transition-speed);
}

/* Hover and Focus States */
.authFormContainer button:hover,
.authFormContainer button:focus {
    background-color: transparent;
    color: var(--primary-color);
    outline: none;
}

button.test {
    display: inline-block;
    padding: var(--thin-container-padding);
    font-size: var(--normal-font-size);
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    border-radius: 8px;
    border: 1px solid var(--primary-color);
    background-color: var(--primary-color);
    color: var(--bg-color);
    transition: var(--transition-speed) ease-in-out;
    width: fit-content;
    /* height: 50px; */
    align-self: center;
}

/* Hover and Focus States */
button.test:hover{
    background-color: transparent;
    color: var(--primary-color);
    outline: none;  
}

.standardLander {
    width: auto;
    height: 100%;
    display: flex;
    z-index: 0;
}

.standardFormContainer {
    /* visibility: collapse; */
    position: relative;
    width: clamp(150px, 90vw, 1000px);
    /* max-height: 1200px; */
    padding: var(--standard-container-padding);
    display: block;
    margin: auto;
    margin-top: clamp(100px, 15vh, 200px);
    z-index: 1;
}

.back {
    position: absolute;
    right: 0;
    top: 10px;
    width: 25px;
    height: 25px;
    background-image: url(./default_images/back.svg);
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.75;
    z-index: 2;
    visibility: visible;
    transition: all var(--transition-speed);
}

.standardFormContainer form {
    display: flex;
    flex-direction: column;
    row-gap: var(--thin-container-padding);
}

.standardFormContainer button {
    /* Base styles */
    display: inline-block;
    width: auto;
    padding: var(--standard-padding);
    margin-top: var(--standard-padding);
    font-size: var(--normal-font-size);
    font-weight: 500;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    border-radius: 8px;
    border: 1px solid var(--primary-color);
    background-color: var(--primary-color);
    color: var(--bg-color);
    /* Use a variable for text color */
    transition: background-color var(--transition-speed), color var(--transition-speed), border-color var(--transition-speed);
}

/* Hover and Focus States */
.standardFormContainer button:hover,
.standardFormContainer button:focus {
    background-color: transparent;
    color: var(--primary-color);
    outline: none;
}

.flexLayer {
    display: flex;
    gap: var(--thin-container-padding);
}
.flexLayerNowrap {
    display: flex;
    gap: var(--thin-container-padding);
    flex-wrap: nowrap;
}
.centerInside{
    display: flex;
    align-items: center;
    justify-content: center;
    justify-items: center;
}
.column{
    flex-direction: column;
    display: flex;
}

.heading h1{
    display: flex;
    flex-wrap: nowrap;
    /* flex: 0 0 0; */
}

.pageLander {
    display: flex;
    width: auto;
    height: 100vh;
    justify-content: center;
    align-items: center;
}

#storePanel{
    margin-top: 50px;
    padding: var(--standard-container-padding);
}

#storePanel .header{
    padding-bottom: var(--standard-container-padding);
    border-bottom: 1px solid var(--light-grey);
}

.flexLayer p{
    padding: var(--standard-padding);
    background-color: whitesmoke;
    margin-top: var(--standard-padding);
    border-radius: 8px;
}

.storeBody{
    margin-top: var(--standard-container-padding);
}

.storeBody p{
    font-size: var(--normal-font-size);
}

.storesContainer {
    display: block;
    margin: auto;
}

.roundedButton{
    display: inline-block;
    padding: var(--thin-container-padding);
    font-size: var(--normal-font-size);
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    border-radius: 8px;
    border: 1px solid var(--primary-color);
    background-color: var(--primary-color);
    color: var(--bg-color);
    transition: var(--transition-speed) ease-in-out;
    width: fit-content;
    /* height: 50px; */
    align-self: center;
}

.Intro{
    padding: var(--standard-container-padding);
    margin: auto;
    max-width: 900px;
}

.storesContainer .heading h2 {
    position: relative;
    font-size: var(--large-font-size);
    text-align: center;
    font-weight: 400;
}

.storesContainer .body {
    padding: var(--thin-container-padding);
    padding-top: var(--standard-container-padding);
}

.storesGrid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--normal-font-size);
}

.storesContainer .store {
    padding: var(--thin-container-padding);
    border-radius: 36px;
    background-color: white;
    border: 1px solid var(--light-grey);
    min-height: 150px;
    min-width: 75px;
    width: clamp(75px, 25vw, 250px);
}

.storesContainer .store .title {
    padding: var(--thin-container-padding);
}

.storesContainer .store .title h3 {
    position: relative;
    font-weight: 300;
    font-size: var(--normal-font-size);
}

.storesContainer .store .title h3::after {
    content: '';
    position: absolute;
    bottom: calc(var(--small-font-size)*-1);
    left: 10%;
    width: 80%;
    height: 1px;
    background-color: var(--light-grey);
}

.storesContainer .store .body {
    font-size: var(--normal-font-size);
    font-weight: 300;
    padding-top: calc(var(--thin-container-padding)*2);
}

.store .addStore {
    width: auto;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.store .addStore .add {
    width: 50%;
    height: 50%;
    background-image: url(./default_images/newStore.svg);
    opacity: 0.25;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    transition: var(--transition-speed);
}

.store .addStore .add:hover {
    transform: scale(1.2);
}

.back:hover {
    transform: scale(1.2);
}

@media (max-width: 820px) {
    nav .internal .links {
        visibility: hidden;
        display: none;
    }

    .burger {
        visibility: visible;
        display: flex;
    }

    nav .internal .profile {
        flex-grow: 1;
    }
    #productList table th{
        text-wrap: nowrap;
    }
}

@media (max-width: 740px) {
    #productList {
        width: auto;
        overflow-x: auto;
    }
}

@media (max-width: 660px) {
    /* :root {
        --small-font-size: 0.6rem;
        --normal-font-size: 0.8rem;
        --medium-font-size: 1rem;
        --large-font-size: 1.25rem;
        --standard-container-padding: 0.75rem;
        --standard-padding: 0.5rem;
        --thin-container-padding: 0.25rem;
    } */

    .storesGrid {
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
    }

    .storesContainer {
        width: 80%;
    }

    .storesContainer .store {
        width: 90%;
        border-radius: 8px;
    }
}

@media (max-width: 450px) {
    .authLander {
        visibility: collapse;
    }

    .authFormContainer {
        visibility: visible;
    }

    /* .standardFormContainer{
        visibility: visible;
    } */
    /* .standardFormContainer {
        width: 90%;
    }

    .material-input {
        max-width: auto;
        min-width: 150px;
    } */

    .storesContainer .store {
        width: 95%;
    }

    .storesContainer {
        width: 95%;
    }

    .storesGrid {
        gap: none;
    }

    :root {
        --small-font-size: 0.75rem;
        /* 9.6px */
        --normal-font-size: 1rem;
        /* 14px */
        --medium-font-size: 1.25rem;
        /* 16px */
        --large-font-size: 1.5rem;
        /* 24px */
        /* --standard-container-padding: 1rem;
        --standard-padding: 0.5rem;
        --thin-container-padding: 0.25rem; */
    }

    /* .standardFormContainer form {
        row-gap: var(--standard-container-padding);
    } */

    .authFormContainer form {
        row-gap: var(--standard-container-padding);
    }
}

@media (max-width: 400px) {
    /* .material-input {
        min-width: 100px;
    }

    .standardFormContainer {
        margin: 0;
        margin-top: clamp(100px, 15vh, 200px);
        width: auto;
    }
    .input-container:has([required])+.label::after {
        position: relative;
        content: "*";
        color: #ff8282;
        margin-left: 2px;
        top: -5px;
    } */
}

@media (max-width: 350px){
    :root {
        --small-font-size: 0.75rem;
        /* 8px */
        --normal-font-size: 0.875rem;
        /* 12px */
        --medium-font-size: 1rem;
        /* 14px */
        --large-font-size: 1.25rem;
    }
    .flexLayer{
        flex-direction: column;
        row-gap: var(--standard-padding);
    }
    /* .standardFormContainer h2{
        display: none;
    } */
    .standardFormContainer form{
        row-gap: var(--standard-padding);
    }
    .back{
        visibility: inherit;
        z-index: 1000;
        top: 15px;
        right: 15px;
        width: 20px;
        height: 20px;
    }
}

@media (max-width: 300px) {
    .storesGrid {
        grid-template-columns: 1fr;
    }
    #storePanel .flexLayer:has(p){
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    #storePanel .flexLayer p{
        width: auto;
        border-radius: 4px;
        padding: var(--small-font-size);
    }
    #storePanel .heading h1{
        /* font-weight: 500; */
        display: flex;
        font-size: var(--large-font-size);
        justify-content: center;
        align-self: center;
    }
    #storePanel .storeBody{
        margin-top: var(--standard-container-padding);
    }
    .material-input {
        min-width: 50px;
    }

    .material-input .label {
        font-size: var(--normal-font-size);
        left: var(--small-font-size);
    }

    .material-input:focus-within .label,
    .material-input.filled .label {
        font-size: var(--small-font-size);
        left: var(--small-font-size);
    }
    :root {
        --small-font-size: 0.5rem;
        /* 8px */
        --normal-font-size: 0.75rem;
        /* 12px */
        --medium-font-size: 0.875rem;
        /* 14px */
        --large-font-size: 1.25rem;
        /* 20px */  
        /* --standard-container-padding: 0.75rem;
        --standard-padding: 0.25rem;
        --thin-container-padding: 0.125rem; */
    }
}

@media (max-wdith: 275px){
    
}