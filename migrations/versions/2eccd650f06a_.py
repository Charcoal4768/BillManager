"""empty message

Revision ID: 2eccd650f06a
Revises: 
Create Date: 2025-09-02 17:59:40.044017

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2eccd650f06a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('addr', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('addr', sa.String(length=200), nullable=True),
    sa.Column('gst_no', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('gst_percent', sa.Integer(), nullable=False),
    sa.Column('expire', sa.DateTime(), nullable=True),
    sa.Column('batch', sa.String(length=12), nullable=True),
    sa.Column('mrp', sa.Float(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm;")
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('trgm_product_idx', ['name', 'batch'], unique=False, postgresql_using='gin', postgresql_ops={'name': 'gin_trgm_ops', 'batch': 'gin_trgm_ops'})

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index('trgm_product_idx', postgresql_using='gin', postgresql_ops={'name': 'gin_trgm_ops', 'batch': 'gin_trgm_ops'})

    op.drop_table('products')
    op.drop_table('stores')
    op.drop_table('users')
    op.execute("DROP EXTENSION IF EXISTS pg_trgm;")
    # ### end Alembic commands ###
